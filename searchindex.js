Search.setIndex({"alltitles": {"A Quick Tour through pycarl": [[5, "a-quick-tour-through-pycarl"]], "Building pycarl": [[7, "building-pycarl"]], "Contents:": [[6, null]], "Getting Started": [[5, null]], "Indices and tables": [[6, "indices-and-tables"]], "Installation": [[7, null]], "Installation Steps": [[7, "installation-steps"]], "Modules:": [[0, null], [6, null]], "Number conversion": [[1, "module-pycarl.convert"]], "Number dependent types (cln)": [[2, "module-pycarl.cln"], [3, "module-pycarl.cln.formula"], [4, "number-dependent-types-cln"]], "Number dependent types (gmp)": [[2, "module-pycarl.gmp"], [3, "module-pycarl.gmp.formula"], [4, "number-dependent-types-gmp"]], "Number independent types": [[2, "module-pycarl"], [3, "module-pycarl.formula"], [4, "number-independent-types"]], "Optional build arguments": [[7, "optional-build-arguments"]], "Pycarl API Reference": [[0, null], [6, "pycarl-api-reference"]], "Pycarl convert": [[1, null]], "Pycarl core": [[2, null]], "Pycarl formula": [[3, null]], "Pycarl parse": [[4, null]], "Requirements": [[7, "requirements"]], "Simple arithmetic operations": [[5, "simple-arithmetic-operations"]], "Testing pycarl installation": [[7, "testing-pycarl-installation"]], "Virtual Environments": [[7, "virtual-environments"]], "Welcome to pycarl\u2019s documentation!": [[6, null]]}, "docnames": ["api", "api/convert", "api/core", "api/formula", "api/parse", "getting_started", "index", "installation"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api.rst", "api/convert.rst", "api/core.rst", "api/formula.rst", "api/parse.rst", "getting_started.rst", "index.rst", "installation.rst"], "indexentries": {"abs() (in module pycarl)": [[2, "pycarl.abs", false]], "abs() (in module pycarl.cln)": [[2, "pycarl.cln.abs", false]], "abs() (in module pycarl.gmp)": [[2, "pycarl.gmp.abs", false]], "abs() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.abs", false]], "abs() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.abs", false]], "abs() (pycarl.interval method)": [[2, "pycarl.Interval.abs", false]], "and (pycarl.formula.formulatype attribute)": [[3, "pycarl.formula.FormulaType.AND", false]], "bitvector (pycarl.formula.formulatype attribute)": [[3, "pycarl.formula.FormulaType.BITVECTOR", false]], "bool (pycarl.formula.formulatype attribute)": [[3, "pycarl.formula.FormulaType.BOOL", false]], "bool (pycarl.variabletype attribute)": [[2, "pycarl.VariableType.BOOL", false]], "boundtype (class in pycarl)": [[2, "pycarl.BoundType", false]], "cache() (pycarl.cln.factorizedpolynomial method)": [[2, "pycarl.cln.FactorizedPolynomial.cache", false]], "cache() (pycarl.gmp.factorizedpolynomial method)": [[2, "pycarl.gmp.FactorizedPolynomial.cache", false]], "carl_version() (in module pycarl)": [[2, "pycarl.carl_version", false]], "ceil() (in module pycarl)": [[2, "pycarl.ceil", false]], "ceil() (in module pycarl.cln)": [[2, "pycarl.cln.ceil", false]], "ceil() (in module pycarl.gmp)": [[2, "pycarl.gmp.ceil", false]], "center() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.center", false]], "center() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.center", false]], "center() (pycarl.interval method)": [[2, "pycarl.Interval.center", false]], "clear_monomial_pool() (in module pycarl)": [[2, "pycarl.clear_monomial_pool", false]], "clear_pools() (in module pycarl)": [[2, "pycarl.clear_pools", false]], "clear_variable_pool() (in module pycarl)": [[2, "pycarl.clear_variable_pool", false]], "coeff (pycarl.cln.term property)": [[2, "pycarl.cln.Term.coeff", false]], "coeff (pycarl.gmp.term property)": [[2, "pycarl.gmp.Term.coeff", false]], "coefficient (pycarl.cln.factorizedpolynomial property)": [[2, "pycarl.cln.FactorizedPolynomial.coefficient", false]], "coefficient (pycarl.gmp.factorizedpolynomial property)": [[2, "pycarl.gmp.FactorizedPolynomial.coefficient", false]], "complement() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.complement", false]], "complement() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.complement", false]], "complement() (pycarl.interval method)": [[2, "pycarl.Interval.complement", false]], "constant_part() (pycarl.cln.factorizedpolynomial method)": [[2, "pycarl.cln.FactorizedPolynomial.constant_part", false]], "constant_part() (pycarl.cln.factorizedrationalfunction method)": [[2, "pycarl.cln.FactorizedRationalFunction.constant_part", false]], "constant_part() (pycarl.cln.polynomial method)": [[2, "pycarl.cln.Polynomial.constant_part", false]], "constant_part() (pycarl.cln.rationalfunction method)": [[2, "pycarl.cln.RationalFunction.constant_part", false]], "constant_part() (pycarl.gmp.factorizedpolynomial method)": [[2, "pycarl.gmp.FactorizedPolynomial.constant_part", false]], "constant_part() (pycarl.gmp.factorizedrationalfunction method)": [[2, "pycarl.gmp.FactorizedRationalFunction.constant_part", false]], "constant_part() (pycarl.gmp.polynomial method)": [[2, "pycarl.gmp.Polynomial.constant_part", false]], "constant_part() (pycarl.gmp.rationalfunction method)": [[2, "pycarl.gmp.RationalFunction.constant_part", false]], "constraint (class in pycarl.cln.formula)": [[3, "pycarl.cln.formula.Constraint", false]], "constraint (class in pycarl.gmp.formula)": [[3, "pycarl.gmp.formula.Constraint", false]], "constraint (pycarl.formula.formulatype attribute)": [[3, "pycarl.formula.FormulaType.CONSTRAINT", false]], "contains() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.contains", false]], "contains() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.contains", false]], "contains() (pycarl.interval method)": [[2, "pycarl.Interval.contains", false]], "convert_to_cln() (in module pycarl.convert)": [[1, "pycarl.convert.convert_to_cln", false]], "convert_to_gmp() (in module pycarl.convert)": [[1, "pycarl.convert.convert_to_gmp", false]], "create_factorized_polynomial() (in module pycarl.cln)": [[2, "pycarl.cln.create_factorized_polynomial", false]], "create_factorized_polynomial() (in module pycarl.gmp)": [[2, "pycarl.gmp.create_factorized_polynomial", false]], "create_monomial() (in module pycarl)": [[2, "pycarl.create_monomial", false]], "degree() (pycarl.cln.polynomial method)": [[2, "pycarl.cln.Polynomial.degree", false]], "degree() (pycarl.gmp.polynomial method)": [[2, "pycarl.gmp.Polynomial.degree", false]], "denominator (pycarl.cln.factorizedrationalfunction property)": [[2, "pycarl.cln.FactorizedRationalFunction.denominator", false]], "denominator (pycarl.cln.rational property)": [[2, "pycarl.cln.Rational.denominator", false]], "denominator (pycarl.cln.rationalfunction property)": [[2, "pycarl.cln.RationalFunction.denominator", false]], "denominator (pycarl.gmp.factorizedrationalfunction property)": [[2, "pycarl.gmp.FactorizedRationalFunction.denominator", false]], "denominator (pycarl.gmp.rational property)": [[2, "pycarl.gmp.Rational.denominator", false]], "denominator (pycarl.gmp.rationalfunction property)": [[2, "pycarl.gmp.RationalFunction.denominator", false]], "denominator() (in module pycarl.cln)": [[2, "pycarl.cln.denominator", false]], "denominator() (in module pycarl.gmp)": [[2, "pycarl.gmp.denominator", false]], "derive() (pycarl.cln.factorizedpolynomial method)": [[2, "pycarl.cln.FactorizedPolynomial.derive", false]], "derive() (pycarl.cln.factorizedrationalfunction method)": [[2, "pycarl.cln.FactorizedRationalFunction.derive", false]], "derive() (pycarl.cln.polynomial method)": [[2, "pycarl.cln.Polynomial.derive", false]], "derive() (pycarl.cln.rationalfunction method)": [[2, "pycarl.cln.RationalFunction.derive", false]], "derive() (pycarl.gmp.factorizedpolynomial method)": [[2, "pycarl.gmp.FactorizedPolynomial.derive", false]], "derive() (pycarl.gmp.factorizedrationalfunction method)": [[2, "pycarl.gmp.FactorizedRationalFunction.derive", false]], "derive() (pycarl.gmp.polynomial method)": [[2, "pycarl.gmp.Polynomial.derive", false]], "derive() (pycarl.gmp.rationalfunction method)": [[2, "pycarl.gmp.RationalFunction.derive", false]], "diameter() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.diameter", false]], "diameter() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.diameter", false]], "diameter() (pycarl.interval method)": [[2, "pycarl.Interval.diameter", false]], "difference() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.difference", false]], "difference() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.difference", false]], "difference() (pycarl.interval method)": [[2, "pycarl.Interval.difference", false]], "div() (in module pycarl)": [[2, "pycarl.div", false]], "div() (in module pycarl.cln)": [[2, "pycarl.cln.div", false]], "div() (in module pycarl.gmp)": [[2, "pycarl.gmp.div", false]], "div() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.div", false]], "div() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.div", false]], "div() (pycarl.interval method)": [[2, "pycarl.Interval.div", false]], "emptyinterval() (pycarl.cln.interval static method)": [[2, "pycarl.cln.Interval.emptyInterval", false]], "emptyinterval() (pycarl.gmp.interval static method)": [[2, "pycarl.gmp.Interval.emptyInterval", false]], "emptyinterval() (pycarl.interval static method)": [[2, "pycarl.Interval.emptyInterval", false]], "eq (pycarl.formula.relation attribute)": [[3, "pycarl.formula.Relation.EQ", false]], "evaluate() (pycarl.cln.factorizedpolynomial method)": [[2, "pycarl.cln.FactorizedPolynomial.evaluate", false]], "evaluate() (pycarl.cln.factorizedrationalfunction method)": [[2, "pycarl.cln.FactorizedRationalFunction.evaluate", false]], "evaluate() (pycarl.cln.polynomial method)": [[2, "pycarl.cln.Polynomial.evaluate", false]], "evaluate() (pycarl.cln.rationalfunction method)": [[2, "pycarl.cln.RationalFunction.evaluate", false]], "evaluate() (pycarl.gmp.factorizedpolynomial method)": [[2, "pycarl.gmp.FactorizedPolynomial.evaluate", false]], "evaluate() (pycarl.gmp.factorizedrationalfunction method)": [[2, "pycarl.gmp.FactorizedRationalFunction.evaluate", false]], "evaluate() (pycarl.gmp.polynomial method)": [[2, "pycarl.gmp.Polynomial.evaluate", false]], "evaluate() (pycarl.gmp.rationalfunction method)": [[2, "pycarl.gmp.RationalFunction.evaluate", false]], "exists (pycarl.formula.formulatype attribute)": [[3, "pycarl.formula.FormulaType.EXISTS", false]], "expand() (in module pycarl.cln)": [[2, "pycarl.cln.expand", false]], "expand() (in module pycarl.gmp)": [[2, "pycarl.gmp.expand", false]], "exponents (pycarl.monomial property)": [[2, "pycarl.Monomial.exponents", false]], "factorization (class in pycarl.cln)": [[2, "pycarl.cln.Factorization", false]], "factorization (class in pycarl.gmp)": [[2, "pycarl.gmp.Factorization", false]], "factorization() (pycarl.cln.factorizedpolynomial method)": [[2, "pycarl.cln.FactorizedPolynomial.factorization", false]], "factorization() (pycarl.gmp.factorizedpolynomial method)": [[2, "pycarl.gmp.FactorizedPolynomial.factorization", false]], "factorizedpolynomial (class in pycarl.cln)": [[2, "pycarl.cln.FactorizedPolynomial", false]], "factorizedpolynomial (class in pycarl.gmp)": [[2, "pycarl.gmp.FactorizedPolynomial", false]], "factorizedrationalfunction (class in pycarl.cln)": [[2, "pycarl.cln.FactorizedRationalFunction", false]], "factorizedrationalfunction (class in pycarl.gmp)": [[2, "pycarl.gmp.FactorizedRationalFunction", false]], "false (pycarl.formula.formulatype attribute)": [[3, "pycarl.formula.FormulaType.FALSE", false]], "floor() (in module pycarl)": [[2, "pycarl.floor", false]], "floor() (in module pycarl.cln)": [[2, "pycarl.cln.floor", false]], "floor() (in module pycarl.gmp)": [[2, "pycarl.gmp.floor", false]], "forall (pycarl.formula.formulatype attribute)": [[3, "pycarl.formula.FormulaType.FORALL", false]], "formula (class in pycarl.cln.formula)": [[3, "pycarl.cln.formula.Formula", false]], "formula (class in pycarl.gmp.formula)": [[3, "pycarl.gmp.formula.Formula", false]], "formulatype (class in pycarl.formula)": [[3, "pycarl.formula.FormulaType", false]], "gather_variables() (pycarl.cln.factorizedpolynomial method)": [[2, "pycarl.cln.FactorizedPolynomial.gather_variables", false]], "gather_variables() (pycarl.cln.factorizedrationalfunction method)": [[2, "pycarl.cln.FactorizedRationalFunction.gather_variables", false]], "gather_variables() (pycarl.cln.polynomial method)": [[2, "pycarl.cln.Polynomial.gather_variables", false]], "gather_variables() (pycarl.cln.rationalfunction method)": [[2, "pycarl.cln.RationalFunction.gather_variables", false]], "gather_variables() (pycarl.gmp.factorizedpolynomial method)": [[2, "pycarl.gmp.FactorizedPolynomial.gather_variables", false]], "gather_variables() (pycarl.gmp.factorizedrationalfunction method)": [[2, "pycarl.gmp.FactorizedRationalFunction.gather_variables", false]], "gather_variables() (pycarl.gmp.polynomial method)": [[2, "pycarl.gmp.Polynomial.gather_variables", false]], "gather_variables() (pycarl.gmp.rationalfunction method)": [[2, "pycarl.gmp.RationalFunction.gather_variables", false]], "geq (pycarl.formula.relation attribute)": [[3, "pycarl.formula.Relation.GEQ", false]], "get_constraint() (pycarl.cln.formula.formula method)": [[3, "pycarl.cln.formula.Formula.get_constraint", false]], "get_constraint() (pycarl.gmp.formula.formula method)": [[3, "pycarl.gmp.formula.Formula.get_constraint", false]], "get_implication_conclusion() (pycarl.cln.formula.formula method)": [[3, "pycarl.cln.formula.Formula.get_implication_conclusion", false]], "get_implication_conclusion() (pycarl.gmp.formula.formula method)": [[3, "pycarl.gmp.formula.Formula.get_implication_conclusion", false]], "get_implication_premise() (pycarl.cln.formula.formula method)": [[3, "pycarl.cln.formula.Formula.get_implication_premise", false]], "get_implication_premise() (pycarl.gmp.formula.formula method)": [[3, "pycarl.gmp.formula.Formula.get_implication_premise", false]], "get_ite_condition() (pycarl.cln.formula.formula method)": [[3, "pycarl.cln.formula.Formula.get_ite_condition", false]], "get_ite_condition() (pycarl.gmp.formula.formula method)": [[3, "pycarl.gmp.formula.Formula.get_ite_condition", false]], "get_ite_first_case() (pycarl.cln.formula.formula method)": [[3, "pycarl.cln.formula.Formula.get_ite_first_case", false]], "get_ite_first_case() (pycarl.gmp.formula.formula method)": [[3, "pycarl.gmp.formula.Formula.get_ite_first_case", false]], "get_ite_second_case() (pycarl.cln.formula.formula method)": [[3, "pycarl.cln.formula.Formula.get_ite_second_case", false]], "get_ite_second_case() (pycarl.gmp.formula.formula method)": [[3, "pycarl.gmp.formula.Formula.get_ite_second_case", false]], "get_negation_subformula() (pycarl.cln.formula.formula method)": [[3, "pycarl.cln.formula.Formula.get_negation_subformula", false]], "get_negation_subformula() (pycarl.gmp.formula.formula method)": [[3, "pycarl.gmp.formula.Formula.get_negation_subformula", false]], "get_subformulas() (pycarl.cln.formula.formula method)": [[3, "pycarl.cln.formula.Formula.get_subformulas", false]], "get_subformulas() (pycarl.gmp.formula.formula method)": [[3, "pycarl.gmp.formula.Formula.get_subformulas", false]], "greater (pycarl.formula.relation attribute)": [[3, "pycarl.formula.Relation.GREATER", false]], "has_cln() (in module pycarl)": [[2, "pycarl.has_cln", false]], "has_parser() (in module pycarl)": [[2, "pycarl.has_parser", false]], "id (pycarl.variable property)": [[2, "pycarl.Variable.id", false]], "iff (pycarl.formula.formulatype attribute)": [[3, "pycarl.formula.FormulaType.IFF", false]], "implies (pycarl.formula.formulatype attribute)": [[3, "pycarl.formula.FormulaType.IMPLIES", false]], "infty (pycarl.boundtype attribute)": [[2, "pycarl.BoundType.INFTY", false]], "int (pycarl.variabletype attribute)": [[2, "pycarl.VariableType.INT", false]], "integer (class in pycarl.cln)": [[2, "pycarl.cln.Integer", false]], "integer (class in pycarl.gmp)": [[2, "pycarl.gmp.Integer", false]], "integralpart() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.integralPart", false]], "integralpart() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.integralPart", false]], "integralpart() (pycarl.interval method)": [[2, "pycarl.Interval.integralPart", false]], "intersect() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.intersect", false]], "intersect() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.intersect", false]], "intersect() (pycarl.interval method)": [[2, "pycarl.Interval.intersect", false]], "intersectswith() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.intersectsWith", false]], "intersectswith() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.intersectsWith", false]], "intersectswith() (pycarl.interval method)": [[2, "pycarl.Interval.intersectsWith", false]], "interval (class in pycarl)": [[2, "pycarl.Interval", false]], "interval (class in pycarl.cln)": [[2, "pycarl.cln.Interval", false]], "interval (class in pycarl.gmp)": [[2, "pycarl.gmp.Interval", false]], "inverse() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.inverse", false]], "inverse() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.inverse", false]], "inverse() (pycarl.interval method)": [[2, "pycarl.Interval.inverse", false]], "is_constant() (pycarl.cln.factorizedpolynomial method)": [[2, "pycarl.cln.FactorizedPolynomial.is_constant", false]], "is_constant() (pycarl.cln.factorizedrationalfunction method)": [[2, "pycarl.cln.FactorizedRationalFunction.is_constant", false]], "is_constant() (pycarl.cln.polynomial method)": [[2, "pycarl.cln.Polynomial.is_constant", false]], "is_constant() (pycarl.cln.rationalfunction method)": [[2, "pycarl.cln.RationalFunction.is_constant", false]], "is_constant() (pycarl.cln.term method)": [[2, "pycarl.cln.Term.is_constant", false]], "is_constant() (pycarl.gmp.factorizedpolynomial method)": [[2, "pycarl.gmp.FactorizedPolynomial.is_constant", false]], "is_constant() (pycarl.gmp.factorizedrationalfunction method)": [[2, "pycarl.gmp.FactorizedRationalFunction.is_constant", false]], "is_constant() (pycarl.gmp.polynomial method)": [[2, "pycarl.gmp.Polynomial.is_constant", false]], "is_constant() (pycarl.gmp.rationalfunction method)": [[2, "pycarl.gmp.RationalFunction.is_constant", false]], "is_constant() (pycarl.gmp.term method)": [[2, "pycarl.gmp.Term.is_constant", false]], "is_minus_one() (pycarl.cln.rational method)": [[2, "pycarl.cln.Rational.is_minus_one", false]], "is_no_variable (pycarl.variable property)": [[2, "pycarl.Variable.is_no_variable", false]], "is_one() (pycarl.cln.factorizedpolynomial method)": [[2, "pycarl.cln.FactorizedPolynomial.is_one", false]], "is_one() (pycarl.cln.rational method)": [[2, "pycarl.cln.Rational.is_one", false]], "is_one() (pycarl.cln.term method)": [[2, "pycarl.cln.Term.is_one", false]], "is_one() (pycarl.gmp.factorizedpolynomial method)": [[2, "pycarl.gmp.FactorizedPolynomial.is_one", false]], "is_one() (pycarl.gmp.term method)": [[2, "pycarl.gmp.Term.is_one", false]], "isclosedinterval() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.isClosedInterval", false]], "isclosedinterval() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.isClosedInterval", false]], "isclosedinterval() (pycarl.interval method)": [[2, "pycarl.Interval.isClosedInterval", false]], "isempty() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.isEmpty", false]], "isempty() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.isEmpty", false]], "isempty() (pycarl.interval method)": [[2, "pycarl.Interval.isEmpty", false]], "ishalfbounded() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.isHalfBounded", false]], "ishalfbounded() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.isHalfBounded", false]], "ishalfbounded() (pycarl.interval method)": [[2, "pycarl.Interval.isHalfBounded", false]], "isinfinite() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.isInfinite", false]], "isinfinite() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.isInfinite", false]], "isinfinite() (pycarl.interval method)": [[2, "pycarl.Interval.isInfinite", false]], "isinteger() (in module pycarl)": [[2, "pycarl.isInteger", false]], "isinteger() (in module pycarl.cln)": [[2, "pycarl.cln.isInteger", false]], "isinteger() (in module pycarl.gmp)": [[2, "pycarl.gmp.isInteger", false]], "isnegative() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.isNegative", false]], "isnegative() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.isNegative", false]], "isnegative() (pycarl.interval method)": [[2, "pycarl.Interval.isNegative", false]], "isone() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.isOne", false]], "isone() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.isOne", false]], "isone() (pycarl.interval method)": [[2, "pycarl.Interval.isOne", false]], "isopeninterval() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.isOpenInterval", false]], "isopeninterval() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.isOpenInterval", false]], "isopeninterval() (pycarl.interval method)": [[2, "pycarl.Interval.isOpenInterval", false]], "ispointinterval() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.isPointInterval", false]], "ispointinterval() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.isPointInterval", false]], "ispointinterval() (pycarl.interval method)": [[2, "pycarl.Interval.isPointInterval", false]], "ispositive() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.isPositive", false]], "ispositive() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.isPositive", false]], "ispositive() (pycarl.interval method)": [[2, "pycarl.Interval.isPositive", false]], "ispropersubset() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.isProperSubset", false]], "ispropersubset() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.isProperSubset", false]], "ispropersubset() (pycarl.interval method)": [[2, "pycarl.Interval.isProperSubset", false]], "isseminegative() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.isSemiNegative", false]], "isseminegative() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.isSemiNegative", false]], "isseminegative() (pycarl.interval method)": [[2, "pycarl.Interval.isSemiNegative", false]], "issemipositive() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.isSemiPositive", false]], "issemipositive() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.isSemiPositive", false]], "issemipositive() (pycarl.interval method)": [[2, "pycarl.Interval.isSemiPositive", false]], "issubset() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.isSubset", false]], "issubset() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.isSubset", false]], "issubset() (pycarl.interval method)": [[2, "pycarl.Interval.isSubset", false]], "isunbounded() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.isUnbounded", false]], "isunbounded() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.isUnbounded", false]], "isunbounded() (pycarl.interval method)": [[2, "pycarl.Interval.isUnbounded", false]], "iszero() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.isZero", false]], "iszero() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.isZero", false]], "iszero() (pycarl.interval method)": [[2, "pycarl.Interval.isZero", false]], "ite (pycarl.formula.formulatype attribute)": [[3, "pycarl.formula.FormulaType.ITE", false]], "leq (pycarl.formula.relation attribute)": [[3, "pycarl.formula.Relation.LEQ", false]], "less (pycarl.formula.relation attribute)": [[3, "pycarl.formula.Relation.LESS", false]], "lhs (pycarl.cln.formula.constraint property)": [[3, "pycarl.cln.formula.Constraint.lhs", false]], "lhs (pycarl.gmp.formula.constraint property)": [[3, "pycarl.gmp.formula.Constraint.lhs", false]], "lhs() (pycarl.cln.formula.simpleconstraint method)": [[3, "pycarl.cln.formula.SimpleConstraint.lhs", false]], "lhs() (pycarl.cln.formula.simpleconstraintratfunc method)": [[3, "pycarl.cln.formula.SimpleConstraintRatFunc.lhs", false]], "lhs() (pycarl.gmp.formula.simpleconstraint method)": [[3, "pycarl.gmp.formula.SimpleConstraint.lhs", false]], "lhs() (pycarl.gmp.formula.simpleconstraintratfunc method)": [[3, "pycarl.gmp.formula.SimpleConstraintRatFunc.lhs", false]], "lower() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.lower", false]], "lower() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.lower", false]], "lower() (pycarl.interval method)": [[2, "pycarl.Interval.lower", false]], "meets() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.meets", false]], "meets() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.meets", false]], "meets() (pycarl.interval method)": [[2, "pycarl.Interval.meets", false]], "module": [[1, "module-pycarl.convert", false], [2, "module-pycarl", false], [2, "module-pycarl.cln", false], [2, "module-pycarl.gmp", false], [3, "module-pycarl.cln.formula", false], [3, "module-pycarl.formula", false], [3, "module-pycarl.gmp.formula", false]], "monomial (class in pycarl)": [[2, "pycarl.Monomial", false]], "monomial (pycarl.cln.term property)": [[2, "pycarl.cln.Term.monomial", false]], "monomial (pycarl.gmp.term property)": [[2, "pycarl.gmp.Term.monomial", false]], "name (pycarl.boundtype property)": [[2, "pycarl.BoundType.name", false]], "name (pycarl.formula.formulatype property)": [[3, "pycarl.formula.FormulaType.name", false]], "name (pycarl.variable property)": [[2, "pycarl.Variable.name", false]], "name (pycarl.variabletype property)": [[2, "pycarl.VariableType.name", false]], "name() (pycarl.formula.relation method)": [[3, "pycarl.formula.Relation.name", false]], "neq (pycarl.formula.relation attribute)": [[3, "pycarl.formula.Relation.NEQ", false]], "nominator (pycarl.cln.rational property)": [[2, "pycarl.cln.Rational.nominator", false]], "nominator (pycarl.cln.rationalfunction property)": [[2, "pycarl.cln.RationalFunction.nominator", false]], "nominator (pycarl.gmp.rational property)": [[2, "pycarl.gmp.Rational.nominator", false]], "nominator (pycarl.gmp.rationalfunction property)": [[2, "pycarl.gmp.RationalFunction.nominator", false]], "nopicklingsupport": [[2, "pycarl.NoPicklingSupport", false]], "not (pycarl.formula.formulatype attribute)": [[3, "pycarl.formula.FormulaType.NOT", false]], "nr_terms (pycarl.cln.polynomial property)": [[2, "pycarl.cln.Polynomial.nr_terms", false]], "nr_terms (pycarl.gmp.polynomial property)": [[2, "pycarl.gmp.Polynomial.nr_terms", false]], "numerator (pycarl.cln.factorizedrationalfunction property)": [[2, "pycarl.cln.FactorizedRationalFunction.numerator", false]], "numerator (pycarl.cln.rational property)": [[2, "pycarl.cln.Rational.numerator", false]], "numerator (pycarl.cln.rationalfunction property)": [[2, "pycarl.cln.RationalFunction.numerator", false]], "numerator (pycarl.gmp.factorizedrationalfunction property)": [[2, "pycarl.gmp.FactorizedRationalFunction.numerator", false]], "numerator (pycarl.gmp.rational property)": [[2, "pycarl.gmp.Rational.numerator", false]], "numerator (pycarl.gmp.rationalfunction property)": [[2, "pycarl.gmp.RationalFunction.numerator", false]], "numerator() (in module pycarl.cln)": [[2, "pycarl.cln.numerator", false]], "numerator() (in module pycarl.gmp)": [[2, "pycarl.gmp.numerator", false]], "or (pycarl.formula.formulatype attribute)": [[3, "pycarl.formula.FormulaType.OR", false]], "polynomial (class in pycarl.cln)": [[2, "pycarl.cln.Polynomial", false]], "polynomial (class in pycarl.gmp)": [[2, "pycarl.gmp.Polynomial", false]], "polynomial() (pycarl.cln.factorizedpolynomial method)": [[2, "pycarl.cln.FactorizedPolynomial.polynomial", false]], "polynomial() (pycarl.gmp.factorizedpolynomial method)": [[2, "pycarl.gmp.FactorizedPolynomial.polynomial", false]], "pow() (in module pycarl)": [[2, "pycarl.pow", false]], "pow() (in module pycarl.cln)": [[2, "pycarl.cln.pow", false]], "pow() (in module pycarl.gmp)": [[2, "pycarl.gmp.pow", false]], "print_info() (in module pycarl)": [[2, "pycarl.print_info", false]], "pycarl": [[2, "module-pycarl", false]], "pycarl.cln": [[2, "module-pycarl.cln", false]], "pycarl.cln.formula": [[3, "module-pycarl.cln.formula", false]], "pycarl.convert": [[1, "module-pycarl.convert", false]], "pycarl.formula": [[3, "module-pycarl.formula", false]], "pycarl.gmp": [[2, "module-pycarl.gmp", false]], "pycarl.gmp.formula": [[3, "module-pycarl.gmp.formula", false]], "quotient() (in module pycarl)": [[2, "pycarl.quotient", false]], "quotient() (in module pycarl.cln)": [[2, "pycarl.cln.quotient", false]], "quotient() (in module pycarl.gmp)": [[2, "pycarl.gmp.quotient", false]], "rank (pycarl.variable property)": [[2, "pycarl.Variable.rank", false]], "rational (class in pycarl.cln)": [[2, "pycarl.cln.Rational", false]], "rational (class in pycarl.gmp)": [[2, "pycarl.gmp.Rational", false]], "rational_function() (pycarl.cln.factorizedrationalfunction method)": [[2, "pycarl.cln.FactorizedRationalFunction.rational_function", false]], "rational_function() (pycarl.gmp.factorizedrationalfunction method)": [[2, "pycarl.gmp.FactorizedRationalFunction.rational_function", false]], "rationalfunction (class in pycarl.cln)": [[2, "pycarl.cln.RationalFunction", false]], "rationalfunction (class in pycarl.gmp)": [[2, "pycarl.gmp.RationalFunction", false]], "real (pycarl.variabletype attribute)": [[2, "pycarl.VariableType.REAL", false]], "rel() (pycarl.cln.formula.simpleconstraint method)": [[3, "pycarl.cln.formula.SimpleConstraint.rel", false]], "rel() (pycarl.cln.formula.simpleconstraintratfunc method)": [[3, "pycarl.cln.formula.SimpleConstraintRatFunc.rel", false]], "rel() (pycarl.gmp.formula.simpleconstraint method)": [[3, "pycarl.gmp.formula.SimpleConstraint.rel", false]], "rel() (pycarl.gmp.formula.simpleconstraintratfunc method)": [[3, "pycarl.gmp.formula.SimpleConstraintRatFunc.rel", false]], "relation (class in pycarl.formula)": [[3, "pycarl.formula.Relation", false]], "relation (pycarl.cln.formula.constraint property)": [[3, "pycarl.cln.formula.Constraint.relation", false]], "relation (pycarl.gmp.formula.constraint property)": [[3, "pycarl.gmp.formula.Constraint.relation", false]], "sample() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.sample", false]], "sample() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.sample", false]], "sample() (pycarl.interval method)": [[2, "pycarl.Interval.sample", false]], "setlower() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.setLower", false]], "setlower() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.setLower", false]], "setlower() (pycarl.interval method)": [[2, "pycarl.Interval.setLower", false]], "setupper() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.setUpper", false]], "setupper() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.setUpper", false]], "setupper() (pycarl.interval method)": [[2, "pycarl.Interval.setUpper", false]], "simpleconstraint (class in pycarl.cln.formula)": [[3, "pycarl.cln.formula.SimpleConstraint", false]], "simpleconstraint (class in pycarl.gmp.formula)": [[3, "pycarl.gmp.formula.SimpleConstraint", false]], "simpleconstraintratfunc (class in pycarl.cln.formula)": [[3, "pycarl.cln.formula.SimpleConstraintRatFunc", false]], "simpleconstraintratfunc (class in pycarl.gmp.formula)": [[3, "pycarl.gmp.formula.SimpleConstraintRatFunc", false]], "strict (pycarl.boundtype attribute)": [[2, "pycarl.BoundType.STRICT", false]], "substitute() (pycarl.cln.polynomial method)": [[2, "pycarl.cln.Polynomial.substitute", false]], "substitute() (pycarl.gmp.polynomial method)": [[2, "pycarl.gmp.Polynomial.substitute", false]], "symmetricdifference() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.symmetricDifference", false]], "symmetricdifference() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.symmetricDifference", false]], "symmetricdifference() (pycarl.interval method)": [[2, "pycarl.Interval.symmetricDifference", false]], "tdeg (pycarl.cln.term property)": [[2, "pycarl.cln.Term.tdeg", false]], "tdeg (pycarl.gmp.term property)": [[2, "pycarl.gmp.Term.tdeg", false]], "tdeg (pycarl.monomial property)": [[2, "pycarl.Monomial.tdeg", false]], "term (class in pycarl.cln)": [[2, "pycarl.cln.Term", false]], "term (class in pycarl.gmp)": [[2, "pycarl.gmp.Term", false]], "to_smt2() (pycarl.cln.factorizedpolynomial method)": [[2, "pycarl.cln.FactorizedPolynomial.to_smt2", false]], "to_smt2() (pycarl.cln.factorizedrationalfunction method)": [[2, "pycarl.cln.FactorizedRationalFunction.to_smt2", false]], "to_smt2() (pycarl.cln.formula.constraint method)": [[3, "pycarl.cln.formula.Constraint.to_smt2", false]], "to_smt2() (pycarl.cln.formula.formula method)": [[3, "pycarl.cln.formula.Formula.to_smt2", false]], "to_smt2() (pycarl.cln.polynomial method)": [[2, "pycarl.cln.Polynomial.to_smt2", false]], "to_smt2() (pycarl.cln.rationalfunction method)": [[2, "pycarl.cln.RationalFunction.to_smt2", false]], "to_smt2() (pycarl.gmp.factorizedpolynomial method)": [[2, "pycarl.gmp.FactorizedPolynomial.to_smt2", false]], "to_smt2() (pycarl.gmp.factorizedrationalfunction method)": [[2, "pycarl.gmp.FactorizedRationalFunction.to_smt2", false]], "to_smt2() (pycarl.gmp.formula.constraint method)": [[3, "pycarl.gmp.formula.Constraint.to_smt2", false]], "to_smt2() (pycarl.gmp.formula.formula method)": [[3, "pycarl.gmp.formula.Formula.to_smt2", false]], "to_smt2() (pycarl.gmp.polynomial method)": [[2, "pycarl.gmp.Polynomial.to_smt2", false]], "to_smt2() (pycarl.gmp.rationalfunction method)": [[2, "pycarl.gmp.RationalFunction.to_smt2", false]], "total_degree (pycarl.cln.polynomial property)": [[2, "pycarl.cln.Polynomial.total_degree", false]], "total_degree (pycarl.gmp.polynomial property)": [[2, "pycarl.gmp.Polynomial.total_degree", false]], "true (pycarl.formula.formulatype attribute)": [[3, "pycarl.formula.FormulaType.TRUE", false]], "type (pycarl.cln.formula.formula property)": [[3, "pycarl.cln.formula.Formula.type", false]], "type (pycarl.gmp.formula.formula property)": [[3, "pycarl.gmp.formula.Formula.type", false]], "type (pycarl.variable property)": [[2, "pycarl.Variable.type", false]], "ueq (pycarl.formula.formulatype attribute)": [[3, "pycarl.formula.FormulaType.UEQ", false]], "unboundedinterval() (pycarl.cln.interval static method)": [[2, "pycarl.cln.Interval.unboundedInterval", false]], "unboundedinterval() (pycarl.gmp.interval static method)": [[2, "pycarl.gmp.Interval.unboundedInterval", false]], "unboundedinterval() (pycarl.interval static method)": [[2, "pycarl.Interval.unboundedInterval", false]], "unite() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.unite", false]], "unite() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.unite", false]], "unite() (pycarl.interval method)": [[2, "pycarl.Interval.unite", false]], "upper() (pycarl.cln.interval method)": [[2, "pycarl.cln.Interval.upper", false]], "upper() (pycarl.gmp.interval method)": [[2, "pycarl.gmp.Interval.upper", false]], "upper() (pycarl.interval method)": [[2, "pycarl.Interval.upper", false]], "value (pycarl.boundtype property)": [[2, "pycarl.BoundType.value", false]], "value (pycarl.formula.formulatype property)": [[3, "pycarl.formula.FormulaType.value", false]], "value (pycarl.formula.relation property)": [[3, "pycarl.formula.Relation.value", false]], "value (pycarl.variabletype property)": [[2, "pycarl.VariableType.value", false]], "variable (class in pycarl)": [[2, "pycarl.Variable", false]], "variable_with_name() (in module pycarl)": [[2, "pycarl.variable_with_name", false]], "variabletype (class in pycarl)": [[2, "pycarl.VariableType", false]], "weak (pycarl.boundtype attribute)": [[2, "pycarl.BoundType.WEAK", false]], "xor (pycarl.formula.formulatype attribute)": [[3, "pycarl.formula.FormulaType.XOR", false]], "zerointerval() (pycarl.cln.interval static method)": [[2, "pycarl.cln.Interval.zeroInterval", false]], "zerointerval() (pycarl.gmp.interval static method)": [[2, "pycarl.gmp.Interval.zeroInterval", false]], "zerointerval() (pycarl.interval static method)": [[2, "pycarl.Interval.zeroInterval", false]]}, "objects": {"": [[2, 0, 0, "-", "pycarl"]], "pycarl": [[2, 1, 1, "", "BoundType"], [2, 1, 1, "", "Interval"], [2, 1, 1, "", "Monomial"], [2, 5, 1, "", "NoPicklingSupport"], [2, 1, 1, "", "Variable"], [2, 1, 1, "", "VariableType"], [2, 6, 1, "", "abs"], [2, 6, 1, "", "carl_version"], [2, 6, 1, "", "ceil"], [2, 6, 1, "", "clear_monomial_pool"], [2, 6, 1, "", "clear_pools"], [2, 6, 1, "", "clear_variable_pool"], [2, 0, 0, "-", "cln"], [1, 0, 0, "-", "convert"], [2, 6, 1, "", "create_monomial"], [2, 6, 1, "", "div"], [2, 6, 1, "", "floor"], [3, 0, 0, "-", "formula"], [2, 0, 0, "-", "gmp"], [2, 6, 1, "", "has_cln"], [2, 6, 1, "", "has_parser"], [2, 6, 1, "", "isInteger"], [2, 6, 1, "", "pow"], [2, 6, 1, "", "print_info"], [2, 6, 1, "", "quotient"], [2, 6, 1, "", "variable_with_name"]], "pycarl.BoundType": [[2, 2, 1, "", "INFTY"], [2, 2, 1, "", "STRICT"], [2, 2, 1, "", "WEAK"], [2, 3, 1, "", "name"], [2, 3, 1, "", "value"]], "pycarl.Interval": [[2, 4, 1, "", "abs"], [2, 4, 1, "", "center"], [2, 4, 1, "", "complement"], [2, 4, 1, "", "contains"], [2, 4, 1, "", "diameter"], [2, 4, 1, "", "difference"], [2, 4, 1, "", "div"], [2, 4, 1, "", "emptyInterval"], [2, 4, 1, "", "integralPart"], [2, 4, 1, "", "intersect"], [2, 4, 1, "", "intersectsWith"], [2, 4, 1, "", "inverse"], [2, 4, 1, "", "isClosedInterval"], [2, 4, 1, "", "isEmpty"], [2, 4, 1, "", "isHalfBounded"], [2, 4, 1, "", "isInfinite"], [2, 4, 1, "", "isNegative"], [2, 4, 1, "", "isOne"], [2, 4, 1, "", "isOpenInterval"], [2, 4, 1, "", "isPointInterval"], [2, 4, 1, "", "isPositive"], [2, 4, 1, "", "isProperSubset"], [2, 4, 1, "", "isSemiNegative"], [2, 4, 1, "", "isSemiPositive"], [2, 4, 1, "", "isSubset"], [2, 4, 1, "", "isUnbounded"], [2, 4, 1, "", "isZero"], [2, 4, 1, "", "lower"], [2, 4, 1, "", "meets"], [2, 4, 1, "", "sample"], [2, 4, 1, "", "setLower"], [2, 4, 1, "", "setUpper"], [2, 4, 1, "", "symmetricDifference"], [2, 4, 1, "", "unboundedInterval"], [2, 4, 1, "", "unite"], [2, 4, 1, "", "upper"], [2, 4, 1, "", "zeroInterval"]], "pycarl.Monomial": [[2, 3, 1, "", "exponents"], [2, 3, 1, "", "tdeg"]], "pycarl.Variable": [[2, 3, 1, "", "id"], [2, 3, 1, "", "is_no_variable"], [2, 3, 1, "", "name"], [2, 3, 1, "", "rank"], [2, 3, 1, "", "type"]], "pycarl.VariableType": [[2, 2, 1, "", "BOOL"], [2, 2, 1, "", "INT"], [2, 2, 1, "", "REAL"], [2, 3, 1, "", "name"], [2, 3, 1, "", "value"]], "pycarl.cln": [[2, 1, 1, "", "Factorization"], [2, 1, 1, "", "FactorizedPolynomial"], [2, 1, 1, "", "FactorizedRationalFunction"], [2, 1, 1, "", "Integer"], [2, 1, 1, "", "Interval"], [2, 1, 1, "", "Polynomial"], [2, 1, 1, "", "Rational"], [2, 1, 1, "", "RationalFunction"], [2, 1, 1, "", "Term"], [2, 6, 1, "", "abs"], [2, 6, 1, "", "ceil"], [2, 6, 1, "", "create_factorized_polynomial"], [2, 6, 1, "", "denominator"], [2, 6, 1, "", "div"], [2, 6, 1, "", "expand"], [2, 6, 1, "", "floor"], [3, 0, 0, "-", "formula"], [2, 6, 1, "", "isInteger"], [2, 6, 1, "", "numerator"], [2, 6, 1, "", "pow"], [2, 6, 1, "", "quotient"]], "pycarl.cln.FactorizedPolynomial": [[2, 4, 1, "", "cache"], [2, 3, 1, "", "coefficient"], [2, 4, 1, "", "constant_part"], [2, 4, 1, "", "derive"], [2, 4, 1, "", "evaluate"], [2, 4, 1, "", "factorization"], [2, 4, 1, "", "gather_variables"], [2, 4, 1, "", "is_constant"], [2, 4, 1, "", "is_one"], [2, 4, 1, "", "polynomial"], [2, 4, 1, "", "to_smt2"]], "pycarl.cln.FactorizedRationalFunction": [[2, 4, 1, "", "constant_part"], [2, 3, 1, "", "denominator"], [2, 4, 1, "", "derive"], [2, 4, 1, "", "evaluate"], [2, 4, 1, "", "gather_variables"], [2, 4, 1, "", "is_constant"], [2, 3, 1, "", "numerator"], [2, 4, 1, "", "rational_function"], [2, 4, 1, "", "to_smt2"]], "pycarl.cln.Interval": [[2, 4, 1, "", "abs"], [2, 4, 1, "", "center"], [2, 4, 1, "", "complement"], [2, 4, 1, "", "contains"], [2, 4, 1, "", "diameter"], [2, 4, 1, "", "difference"], [2, 4, 1, "", "div"], [2, 4, 1, "", "emptyInterval"], [2, 4, 1, "", "integralPart"], [2, 4, 1, "", "intersect"], [2, 4, 1, "", "intersectsWith"], [2, 4, 1, "", "inverse"], [2, 4, 1, "", "isClosedInterval"], [2, 4, 1, "", "isEmpty"], [2, 4, 1, "", "isHalfBounded"], [2, 4, 1, "", "isInfinite"], [2, 4, 1, "", "isNegative"], [2, 4, 1, "", "isOne"], [2, 4, 1, "", "isOpenInterval"], [2, 4, 1, "", "isPointInterval"], [2, 4, 1, "", "isPositive"], [2, 4, 1, "", "isProperSubset"], [2, 4, 1, "", "isSemiNegative"], [2, 4, 1, "", "isSemiPositive"], [2, 4, 1, "", "isSubset"], [2, 4, 1, "", "isUnbounded"], [2, 4, 1, "", "isZero"], [2, 4, 1, "", "lower"], [2, 4, 1, "", "meets"], [2, 4, 1, "", "sample"], [2, 4, 1, "", "setLower"], [2, 4, 1, "", "setUpper"], [2, 4, 1, "", "symmetricDifference"], [2, 4, 1, "", "unboundedInterval"], [2, 4, 1, "", "unite"], [2, 4, 1, "", "upper"], [2, 4, 1, "", "zeroInterval"]], "pycarl.cln.Polynomial": [[2, 4, 1, "", "constant_part"], [2, 4, 1, "", "degree"], [2, 4, 1, "", "derive"], [2, 4, 1, "", "evaluate"], [2, 4, 1, "", "gather_variables"], [2, 4, 1, "", "is_constant"], [2, 3, 1, "", "nr_terms"], [2, 4, 1, "", "substitute"], [2, 4, 1, "", "to_smt2"], [2, 3, 1, "", "total_degree"]], "pycarl.cln.Rational": [[2, 3, 1, "", "denominator"], [2, 4, 1, "", "is_minus_one"], [2, 4, 1, "", "is_one"], [2, 3, 1, "", "nominator"], [2, 3, 1, "", "numerator"]], "pycarl.cln.RationalFunction": [[2, 4, 1, "", "constant_part"], [2, 3, 1, "", "denominator"], [2, 4, 1, "", "derive"], [2, 4, 1, "", "evaluate"], [2, 4, 1, "", "gather_variables"], [2, 4, 1, "", "is_constant"], [2, 3, 1, "", "nominator"], [2, 3, 1, "", "numerator"], [2, 4, 1, "", "to_smt2"]], "pycarl.cln.Term": [[2, 3, 1, "", "coeff"], [2, 4, 1, "", "is_constant"], [2, 4, 1, "", "is_one"], [2, 3, 1, "", "monomial"], [2, 3, 1, "", "tdeg"]], "pycarl.cln.formula": [[3, 1, 1, "", "Constraint"], [3, 1, 1, "", "Formula"], [3, 1, 1, "", "SimpleConstraint"], [3, 1, 1, "", "SimpleConstraintRatFunc"]], "pycarl.cln.formula.Constraint": [[3, 3, 1, "", "lhs"], [3, 3, 1, "", "relation"], [3, 4, 1, "", "to_smt2"]], "pycarl.cln.formula.Formula": [[3, 4, 1, "", "get_constraint"], [3, 4, 1, "", "get_implication_conclusion"], [3, 4, 1, "", "get_implication_premise"], [3, 4, 1, "", "get_ite_condition"], [3, 4, 1, "", "get_ite_first_case"], [3, 4, 1, "", "get_ite_second_case"], [3, 4, 1, "", "get_negation_subformula"], [3, 4, 1, "", "get_subformulas"], [3, 4, 1, "", "to_smt2"], [3, 3, 1, "", "type"]], "pycarl.cln.formula.SimpleConstraint": [[3, 4, 1, "", "lhs"], [3, 4, 1, "", "rel"]], "pycarl.cln.formula.SimpleConstraintRatFunc": [[3, 4, 1, "", "lhs"], [3, 4, 1, "", "rel"]], "pycarl.convert": [[1, 6, 1, "", "convert_to_cln"], [1, 6, 1, "", "convert_to_gmp"]], "pycarl.formula": [[3, 1, 1, "", "FormulaType"], [3, 1, 1, "", "Relation"]], "pycarl.formula.FormulaType": [[3, 2, 1, "", "AND"], [3, 2, 1, "", "BITVECTOR"], [3, 2, 1, "", "BOOL"], [3, 2, 1, "", "CONSTRAINT"], [3, 2, 1, "", "EXISTS"], [3, 2, 1, "", "FALSE"], [3, 2, 1, "", "FORALL"], [3, 2, 1, "", "IFF"], [3, 2, 1, "", "IMPLIES"], [3, 2, 1, "", "ITE"], [3, 2, 1, "", "NOT"], [3, 2, 1, "", "OR"], [3, 2, 1, "", "TRUE"], [3, 2, 1, "", "UEQ"], [3, 2, 1, "", "XOR"], [3, 3, 1, "", "name"], [3, 3, 1, "", "value"]], "pycarl.formula.Relation": [[3, 2, 1, "", "EQ"], [3, 2, 1, "", "GEQ"], [3, 2, 1, "", "GREATER"], [3, 2, 1, "", "LEQ"], [3, 2, 1, "", "LESS"], [3, 2, 1, "", "NEQ"], [3, 4, 1, "", "name"], [3, 3, 1, "", "value"]], "pycarl.gmp": [[2, 1, 1, "", "Factorization"], [2, 1, 1, "", "FactorizedPolynomial"], [2, 1, 1, "", "FactorizedRationalFunction"], [2, 1, 1, "", "Integer"], [2, 1, 1, "", "Interval"], [2, 1, 1, "", "Polynomial"], [2, 1, 1, "", "Rational"], [2, 1, 1, "", "RationalFunction"], [2, 1, 1, "", "Term"], [2, 6, 1, "", "abs"], [2, 6, 1, "", "ceil"], [2, 6, 1, "", "create_factorized_polynomial"], [2, 6, 1, "", "denominator"], [2, 6, 1, "", "div"], [2, 6, 1, "", "expand"], [2, 6, 1, "", "floor"], [3, 0, 0, "-", "formula"], [2, 6, 1, "", "isInteger"], [2, 6, 1, "", "numerator"], [2, 6, 1, "", "pow"], [2, 6, 1, "", "quotient"]], "pycarl.gmp.FactorizedPolynomial": [[2, 4, 1, "", "cache"], [2, 3, 1, "", "coefficient"], [2, 4, 1, "", "constant_part"], [2, 4, 1, "", "derive"], [2, 4, 1, "", "evaluate"], [2, 4, 1, "", "factorization"], [2, 4, 1, "", "gather_variables"], [2, 4, 1, "", "is_constant"], [2, 4, 1, "", "is_one"], [2, 4, 1, "", "polynomial"], [2, 4, 1, "", "to_smt2"]], "pycarl.gmp.FactorizedRationalFunction": [[2, 4, 1, "", "constant_part"], [2, 3, 1, "", "denominator"], [2, 4, 1, "", "derive"], [2, 4, 1, "", "evaluate"], [2, 4, 1, "", "gather_variables"], [2, 4, 1, "", "is_constant"], [2, 3, 1, "", "numerator"], [2, 4, 1, "", "rational_function"], [2, 4, 1, "", "to_smt2"]], "pycarl.gmp.Interval": [[2, 4, 1, "", "abs"], [2, 4, 1, "", "center"], [2, 4, 1, "", "complement"], [2, 4, 1, "", "contains"], [2, 4, 1, "", "diameter"], [2, 4, 1, "", "difference"], [2, 4, 1, "", "div"], [2, 4, 1, "", "emptyInterval"], [2, 4, 1, "", "integralPart"], [2, 4, 1, "", "intersect"], [2, 4, 1, "", "intersectsWith"], [2, 4, 1, "", "inverse"], [2, 4, 1, "", "isClosedInterval"], [2, 4, 1, "", "isEmpty"], [2, 4, 1, "", "isHalfBounded"], [2, 4, 1, "", "isInfinite"], [2, 4, 1, "", "isNegative"], [2, 4, 1, "", "isOne"], [2, 4, 1, "", "isOpenInterval"], [2, 4, 1, "", "isPointInterval"], [2, 4, 1, "", "isPositive"], [2, 4, 1, "", "isProperSubset"], [2, 4, 1, "", "isSemiNegative"], [2, 4, 1, "", "isSemiPositive"], [2, 4, 1, "", "isSubset"], [2, 4, 1, "", "isUnbounded"], [2, 4, 1, "", "isZero"], [2, 4, 1, "", "lower"], [2, 4, 1, "", "meets"], [2, 4, 1, "", "sample"], [2, 4, 1, "", "setLower"], [2, 4, 1, "", "setUpper"], [2, 4, 1, "", "symmetricDifference"], [2, 4, 1, "", "unboundedInterval"], [2, 4, 1, "", "unite"], [2, 4, 1, "", "upper"], [2, 4, 1, "", "zeroInterval"]], "pycarl.gmp.Polynomial": [[2, 4, 1, "", "constant_part"], [2, 4, 1, "", "degree"], [2, 4, 1, "", "derive"], [2, 4, 1, "", "evaluate"], [2, 4, 1, "", "gather_variables"], [2, 4, 1, "", "is_constant"], [2, 3, 1, "", "nr_terms"], [2, 4, 1, "", "substitute"], [2, 4, 1, "", "to_smt2"], [2, 3, 1, "", "total_degree"]], "pycarl.gmp.Rational": [[2, 3, 1, "", "denominator"], [2, 3, 1, "", "nominator"], [2, 3, 1, "", "numerator"]], "pycarl.gmp.RationalFunction": [[2, 4, 1, "", "constant_part"], [2, 3, 1, "", "denominator"], [2, 4, 1, "", "derive"], [2, 4, 1, "", "evaluate"], [2, 4, 1, "", "gather_variables"], [2, 4, 1, "", "is_constant"], [2, 3, 1, "", "nominator"], [2, 3, 1, "", "numerator"], [2, 4, 1, "", "to_smt2"]], "pycarl.gmp.Term": [[2, 3, 1, "", "coeff"], [2, 4, 1, "", "is_constant"], [2, 4, 1, "", "is_one"], [2, 3, 1, "", "monomial"], [2, 3, 1, "", "tdeg"]], "pycarl.gmp.formula": [[3, 1, 1, "", "Constraint"], [3, 1, 1, "", "Formula"], [3, 1, 1, "", "SimpleConstraint"], [3, 1, 1, "", "SimpleConstraintRatFunc"]], "pycarl.gmp.formula.Constraint": [[3, 3, 1, "", "lhs"], [3, 3, 1, "", "relation"], [3, 4, 1, "", "to_smt2"]], "pycarl.gmp.formula.Formula": [[3, 4, 1, "", "get_constraint"], [3, 4, 1, "", "get_implication_conclusion"], [3, 4, 1, "", "get_implication_premise"], [3, 4, 1, "", "get_ite_condition"], [3, 4, 1, "", "get_ite_first_case"], [3, 4, 1, "", "get_ite_second_case"], [3, 4, 1, "", "get_negation_subformula"], [3, 4, 1, "", "get_subformulas"], [3, 4, 1, "", "to_smt2"], [3, 3, 1, "", "type"]], "pycarl.gmp.formula.SimpleConstraint": [[3, 4, 1, "", "lhs"], [3, 4, 1, "", "rel"]], "pycarl.gmp.formula.SimpleConstraintRatFunc": [[3, 4, 1, "", "lhs"], [3, 4, 1, "", "rel"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method", "5": "py:exception", "6": "py:function"}, "terms": {"": 7, "0": [2, 3], "01": 5, "1": [2, 3, 5], "10": 3, "11": 3, "12": 3, "15": 3, "16": 3, "2": [2, 3, 5, 7], "3": [3, 5, 7], "4": 3, "5": 3, "6": 3, "7": 3, "8": 3, "9": 3, "A": 6, "AND": 3, "ITE": 3, "If": 7, "In": [5, 7], "NOT": 3, "OR": 3, "TO": 7, "The": 7, "To": 7, "__str__": 3, "_factorizationcach": 2, "ab": 2, "abl": 7, "about": 2, "activ": 7, "add": 7, "addition": 7, "advanc": 7, "after": 7, "all": [2, 7], "also": 7, "an": 7, "ani": 7, "api": 7, "appl": 7, "ar": 7, "arg": [2, 3], "arg0": 2, "arg1": 2, "arg2": 2, "ari": 3, "arithmet": 6, "arm64": 7, "avail": 7, "befor": [5, 7], "being": 7, "bin": 7, "bind": 6, "bitvector": 3, "bool": [2, 3], "boundtyp": 2, "build_ext": 7, "built": 7, "cach": 2, "can": [5, 7], "capabl": 7, "carl": [2, 6, 7], "carl_vers": 2, "case": 3, "cd": 7, "ceil": 2, "center": 2, "certain": 7, "check": 2, "class": [2, 3], "clean": 7, "clear": 2, "clear_monomial_pool": 2, "clear_pool": 2, "clear_variable_pool": [2, 5], "cln": [0, 1, 5, 6, 7], "clone": 7, "cmake": 7, "coeff": 2, "coeffici": 2, "com": 7, "common": 5, "complement": 2, "comput": [2, 6], "conclus": 3, "condit": 3, "configur": 7, "consol": 7, "constant_part": 2, "constraint": 3, "consult": 7, "contain": 2, "convers": [0, 6], "convert": [0, 6], "convert_to_cln": 1, "convert_to_gmp": 1, "core": [0, 6, 7], "correspond": 5, "creat": [2, 5, 7], "create_factorized_polynomi": 2, "create_monomi": 2, "data": 1, "debug": 7, "default": 7, "degre": 2, "denomin": 2, "depend": [0, 6], "deriv": 2, "develop": 7, "diamet": 2, "dict": 2, "differ": [2, 5, 7], "dir": 7, "directli": 7, "disabl": 7, "distribut": 7, "div": 2, "do": [5, 7], "doe": 7, "e": 7, "either": 7, "els": 3, "emptyinterv": 2, "env": 7, "eq": 3, "evalu": 2, "exampl": 5, "except": 2, "exist": 3, "expand": 2, "experi": 7, "expon": 2, "factor": 2, "factorizedpolynomi": 2, "factorizedrationalfunct": [2, 3], "fals": 3, "favourit": 7, "file": 7, "find": 7, "first": 5, "flag": 7, "float": 2, "floor": 2, "follow": [5, 7], "foral": 3, "fork": 7, "format": 5, "formula": [0, 6], "formulatyp": 3, "fraction": 2, "from": [2, 7], "full": 7, "function": [2, 3, 7], "g": 7, "gather_vari": 2, "geq": 3, "get": [2, 3, 6, 7], "get_constraint": 3, "get_implication_conclus": 3, "get_implication_premis": 3, "get_ite_condit": 3, "get_ite_first_cas": 3, "get_ite_second_cas": 3, "get_negation_subformula": 3, "get_subformula": 3, "git": 7, "github": 7, "given": 2, "gmp": [0, 1, 5, 6], "greater": 3, "guid": [5, 7], "ha": 2, "hand": 3, "handl": 3, "has_cln": 2, "has_pars": 2, "have": 7, "help": 7, "http": 7, "i": [2, 6, 7], "id": 2, "iff": [2, 3], "impli": 3, "implic": 3, "import": 5, "independ": [0, 6], "index": 6, "inform": 2, "infti": 2, "instal": [5, 6], "instruct": 5, "int": 2, "integ": [2, 5], "integralpart": 2, "interpret": 5, "intersect": 2, "intersectswith": 2, "interv": 2, "invers": 2, "invok": 7, "is_const": 2, "is_minus_on": 2, "is_no_vari": 2, "is_on": 2, "isclosedinterv": 2, "isempti": 2, "ishalfbound": 2, "isinfinit": 2, "isinteg": 2, "isneg": 2, "isol": 7, "ison": 2, "isopeninterv": 2, "ispointinterv": 2, "isposit": 2, "ispropersubset": 2, "issemineg": 2, "issemiposit": 2, "issu": 7, "issubset": 2, "isunbound": 2, "iszero": 2, "its": 2, "j": 7, "job": 7, "keep": 7, "kwarg": [2, 3], "last": 7, "launch": 5, "left": 3, "leq": 3, "less": 3, "lh": 3, "librari": [6, 7], "list": 3, "locat": 7, "logic": 6, "lower": 2, "make": 7, "manual": 7, "meet": 2, "member": [2, 3], "mode": 7, "modul": 5, "monomi": 2, "more": 7, "move": 7, "multipl": 7, "multivari": 2, "n": 3, "name": [2, 3], "need": 7, "negat": 3, "neq": 3, "nomin": 2, "none": 2, "nopicklingsupport": 2, "now": 7, "nr_term": 2, "number": [0, 5, 6, 7], "numer": 2, "one": 5, "order": 7, "out": 7, "overload": [2, 3], "p": 7, "packag": 7, "page": 6, "param": 1, "pars": [0, 2, 6, 7], "parser": 7, "path": 7, "per": 7, "perform": 5, "pip": 7, "pol1": 5, "pol2": 5, "polynomi": [2, 3, 5], "pool": 2, "pow": 2, "prefix": 7, "premis": 3, "primer": 7, "print": [2, 5], "print_info": 2, "progress": [0, 6, 7], "project": 7, "prompt": 7, "properti": [2, 3], "py": [5, 7], "pytest": 7, "python": [5, 6, 7], "python3": [5, 7], "quick": 6, "quotient": 2, "rank": 2, "ration": 2, "rational_funct": 2, "rationalfunct": 2, "real": 2, "recommend": 7, "refer": 7, "rel": 3, "relat": 3, "remov": 2, "repres": 2, "requir": 6, "result": 5, "return": [1, 2], "run": 7, "rwth": 7, "sampl": 2, "search": 6, "self": [2, 3], "set": [2, 6, 7], "setlow": 2, "setup": 7, "setupp": 2, "short": 7, "should": 5, "side": 3, "silicon": 7, "simpleconstraint": 3, "simpleconstraintratfunc": 3, "some": 5, "sourc": 7, "specifi": 7, "start": [6, 7], "static": 2, "step": 6, "storm": 7, "str": [2, 3], "strict": 2, "structur": 1, "subformula": 3, "substitut": 2, "suitabl": 7, "support": [2, 7], "sure": 7, "symmetricdiffer": 2, "system": 7, "take": 7, "tdeg": 2, "term": 2, "thei": 7, "therefor": 5, "thi": [5, 7], "thread": 7, "through": 6, "to_smt2": [2, 3], "total_degre": 2, "tour": 6, "true": [2, 3], "two": [2, 5], "type": [0, 1, 5, 6], "ueq": 3, "unboundedinterv": 2, "underli": 2, "unit": 2, "upper": 2, "us": [5, 7], "user": 7, "valu": [2, 3], "variabl": [2, 5], "variable_with_nam": 2, "variabletyp": 2, "ve": 7, "version": [2, 7], "virtualenv": 7, "wai": 7, "want": 7, "we": [5, 7], "weak": 2, "whenev": 7, "where": 7, "which": 7, "while": 7, "work": [0, 6, 7], "wrap": 2, "x": [2, 5], "xor": 3, "y": 5, "you": 7, "your": 7, "zerointerv": 2}, "titles": ["Pycarl API Reference", "Pycarl convert", "Pycarl core", "Pycarl formula", "Pycarl parse", "Getting Started", "Welcome to pycarl\u2019s documentation!", "Installation"], "titleterms": {"": 6, "A": 5, "api": [0, 6], "argument": 7, "arithmet": 5, "build": 7, "cln": [2, 3, 4], "content": 6, "convers": 1, "convert": 1, "core": 2, "depend": [2, 3, 4], "document": 6, "environ": 7, "formula": 3, "get": 5, "gmp": [2, 3, 4], "independ": [2, 3, 4], "indic": 6, "instal": 7, "modul": [0, 6], "number": [1, 2, 3, 4], "oper": 5, "option": 7, "pars": 4, "pycarl": [0, 1, 2, 3, 4, 5, 6, 7], "quick": 5, "refer": [0, 6], "requir": 7, "simpl": 5, "start": 5, "step": 7, "tabl": 6, "test": 7, "through": 5, "tour": 5, "type": [2, 3, 4], "virtual": 7, "welcom": 6}})